---
name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    permissions:
      contents: write
      packages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - id: release-please
        name: Release Please
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: go
          package-name: discord-faucet
          changelog-types: >-
            [
              {"type":"feat","section":"Features","hidden":false},
              {"type":"fix","section":"Bug Fixes","hidden":false},
              {"type":"chore","section":"Miscellaneous","hidden":true}
            ]

      - name: Checkout
        uses: actions/checkout@v3
        if: steps.release-please.outputs.release_created
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        if: steps.release-please.outputs.release_created
        with:
          go-version-file: go.mod

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: steps.release-please.outputs.release_created

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: steps.release-please.outputs.release_created

      - name: Run GoReleaser
        if: steps.release-please.outputs.release_created
        run: make release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Install Helm
        uses: azure/setup-helm@v3
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push charts to GHCR
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            if ! helm push "${pkg}" "oci://ghcr.io/${GITHUB_REPOSITORY_OWNER}/charts"; then
              echo '::warning:: helm push failed!'
            fi
          done
